package page 

import "github.com/Sri2103/services/internal/ui/views/layout"
import "github.com/Sri2103/services/internal/ui/views/components"
import "github.com/Sri2103/services/internal/ui/views/products"
import "fmt"
import "encoding/json"
import "github.com/Sri2103/services/internal/ui/services/categories"

type ProductCategoryPageProps struct {
	PageCount   int
	CurrentPage int
	Category    categories_service.Category
	Products    []components.Product
	Sort        int
}

func evaluateSort(sort int) string {
	if sort == 0 {
		return ""
	}

	if sort == 1 {
		return "asc"
	}

	return "desc"
}

func ConvertCategoryPageDataToJson(sort int) string {
	data, _ := json.Marshal(map[string]string{
		"sort": evaluateSort(sort),
	})
	return string(data)
}

templ ProductCategoryPage(props ProductCategoryPageProps) {
	@layouts.BaseLayout() {
		@components.NavBar()
		<div class="bg-gray-100">
			<div class="container py-8 mx-auto">
				<h1 class="mb-4 text-3xl font-semibold">{ props.Category.Name }</h1>
				<!-- Filter and Sort By -->
				<div class="flex justify-between mb-4" x-data={ ConvertCategoryPageDataToJson(props.Sort) }>
					<div>
						<label for="filter" class="mr-2">Filter:</label>
						<select id="filter" class="px-2 py-1 border rounded-md">
							<option value="all">All</option>
							<option value="under_50">$50 and under</option>
							<option value="50_to_100">$50 - $100</option>
							<option value="over_100">$100 and above</option>
						</select>
					</div>
					<div>
						<label for="sort" class="mr-2">Sort By:</label>
						<select
							x-model="sort"
							id="sort"
							class="px-2 py-1 border rounded-md"
							x-on:change="sort=$event.target.value"
							hx-trigger="change"
							hx-target="#product-list"
							hx-get={ fmt.Sprintf("/products/category/%s", props.Category.Id) }
							hx-vals="js:{ sort: event.target.value }"
							hx-indicator="#pageLoader"
							hx-swap="outerHTML"
						>
							<option :selected='sort==""' value="">sort by price</option>
							<option :selected='sort=="asc"' value="asc">Price: Low to High</option>
							<option :selected='sort=="desc"' value="desc">Price: High to Low</option>
						</select>
					</div>
				</div>
				// <div>
				// 	<div id="pageLoader" class=" hidden fixed inset-0 justify-center items-center bg-gray-800 bg-opacity-50 z-50">
				// 		<div class="bg-white p-5 rounded-lg shadow-lg">
				// 			<i class="fa fa-spinner fa-spin text-2xl text-blue-500"></i>
				// 			<p class="text-center mt-2">Loading...</p>
				// 		</div>
				// 	</div>
				// </div>
				@products_templ.ProductsList(products_templ.ProductsListComponentProps{
					Products:    props.Products,
					Category:    props.Category,
					CurrentPage: props.CurrentPage,
					PageCount:   props.PageCount,
				})
			</div>
		</div>
	}
}
